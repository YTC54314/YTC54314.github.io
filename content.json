{"meta":{"title":"Alice's Blog","subtitle":"Backend Engineer，Trying to keep memories in blogs. Cheers!","description":"","author":"Alice Chang","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"Redis指令","slug":"Learning Notes/Redis/Command","date":"2023-10-08T16:38:07.000Z","updated":"2023-10-08T16:42:30.306Z","comments":true,"path":"2023/10/09/Learning Notes/Redis/Command/","link":"","permalink":"http://example.com/2023/10/09/Learning%20Notes/Redis/Command/","excerpt":"","text":"前置作業 確認機器有裝 redis cli，並有權限連進目標Redis host 語法 進到正式 backend 機 連進正式 redis host (路徑在html下redis-stable)&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;redis-stable&#x2F;src&#x2F;redis-cli -h leju-redis-large.iln91w.ng.0001.apne1.cache.amazonaws.com -p 6379 查詢狀態info keyspace 清除所有redis資料FLUSHALL 查詢redis資訊info 查詢redis key狀態info keyspace 查詢redis長度長的keybigkeys1/usr/share/nginx/html/redis-stable/src/redis-cli -h leju-redis-large.iln91w.ng.0001.apne1.cache.amazonaws.com -p 6379 --bigkeys 找出特定開頭的keykeys object_Transactions_* 找出10個最慢的querySLOWLOG GET 10 Reference Redis 命令大全","categories":[{"name":"Learning Notes","slug":"Learning-Notes","permalink":"http://example.com/categories/Learning-Notes/"},{"name":"Redis","slug":"Learning-Notes/Redis","permalink":"http://example.com/categories/Learning-Notes/Redis/"},{"name":"Command","slug":"Learning-Notes/Redis/Command","permalink":"http://example.com/categories/Learning-Notes/Redis/Command/"}],"tags":[{"name":"command","slug":"command","permalink":"http://example.com/tags/command/"},{"name":"redis","slug":"redis","permalink":"http://example.com/tags/redis/"}]},{"title":"Hexo + GitHub Pages 架設個人網誌","slug":"Learning Notes/Hexo/HexoAndGithub","date":"2023-09-03T13:38:07.000Z","updated":"2023-09-03T13:38:07.000Z","comments":true,"path":"2023/09/03/Learning Notes/Hexo/HexoAndGithub/","link":"","permalink":"http://example.com/2023/09/03/Learning%20Notes/Hexo/HexoAndGithub/","excerpt":"","text":"目的建立我的部落格網站，讓我可以寫筆記並從公開網址看到我的個人部落格 使用 github page 看到我的部落格 將原始碼另外存放在 MyBlog 專案 參考文件hexo官方GitHub Pages官方如何使用 Hexo + GitHub Pages 架設個人網誌如何在一台電腦使用多個Git帳號 前置作業git clone MyBlog 到本機已經有我的部落格原始碼了 1$ git clone git@github-personal:YTC54314/MyBlog.git 為何使用 github-personal? 因為這是個人專案，所以要特別指定使用私人Git帳號。如何在一台電腦使用多個Git帳號的實作方法可以看這裡。 確認我的專案來源為 MyBlog.git123$ git remote -vorigin git@github-personal:YTC54314/MyBlog.git (fetch)origin git@github-personal:YTC54314/MyBlog.git (push) 實作在 github 建 repo 名稱必須為 {username}.github.io，並且設為 public建 YTC54314.github.io repository，並且設為 public 在我的部落格專案下安裝 hexo 的 Git 相關套件1$ npm install hexo-deployer-git --save 修改跟目錄的 _config.yml 檔案的 Deployment 設定設定目標部署專案為 YTC54314.github.io.git 1234deploy: type: git repo: https://github.com/YTC54314/YTC54314.github.io.git branch: master 內容建置後部署12$ hexo cl // 清除之前建立的靜態檔案$ hexo g -d // 建立靜態頁面 + 部署至 GitHub 或 123$ hexo cl // 清除之前建立的靜態檔案$ hexo g // 建立靜態頁面$ hexo d // 部署至 GitHub 到瀏覽器開個人頁面就可以看到了url: https://ytc54314.github.io./","categories":[{"name":"Learning Notes","slug":"Learning-Notes","permalink":"http://example.com/categories/Learning-Notes/"},{"name":"Hexo","slug":"Learning-Notes/Hexo","permalink":"http://example.com/categories/Learning-Notes/Hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://example.com/tags/github/"}]},{"title":"Code Reviewer 的心法與職權邊界","slug":"Learning Notes/CodeReview/CodeReview","date":"2023-08-19T13:38:07.000Z","updated":"2023-10-08T16:35:16.381Z","comments":true,"path":"2023/08/19/Learning Notes/CodeReview/CodeReview/","link":"","permalink":"http://example.com/2023/08/19/Learning%20Notes/CodeReview/CodeReview/","excerpt":"","text":"目的 符合團隊規範：架構、風格 程式品質 測不出來的東西，例如：維護性、可讀性 邏輯漏洞（非功能正確性）、安全漏洞 知識分享交流（自己可以學習） 心法、準則 Done is better than perfect (scrum 精神)。 功能有達到就60分了，我們目標是80分，不要求100分。 大架構到程式碼 掃過一眼程式的檔案結構，是否有不該上傳或缺漏的檔案 命名有沒有意義&#x2F;不一致 重複的程式碼有沒有定義成 function 冗長的程式碼能不能拆分 function 命名有沒有意義&#x2F;不一致 越底層、之後修改成本高的優先 資料庫設計 架構規劃 迭代性review，建議著重在 3 – 5 個優化地方，比較容易聚焦在優化的品質。不然每次都看這麼多問題兩邊都很累，每次都進步一點大於一堆問題沒有結論。根據時程的壓力，決定 Code Review 迭代的次數。 不要惡化原有系統就好，每修正到一個項目對系統來說是bonus。 功能性錯誤或粗心錯誤是最不希望發生的。 練習 聰明的 code review 也是門技術，希望不要過度吹毛求疵導致上版延遲，更不要讓review流於形式 迭代性review 不只抓錯，有學習到的地方也可以給予稱讚 [blocker]、[optional]、[question]、［good］ [blocker] 必須要調整，須優先處理或討論 [optional] 有時間可以調整 [question] 對於作法的疑問或好奇 [good] 因為review而學習到的部分 正面回饋、有效溝通 當達成共識變得特別困難時，reviewer 和開發者可以進行面對面的會議，或者請小組長參與調停，而不僅僅是試著通過代碼審查評論來解決衝突。不要因為不能達成共識，就讓 PR 卡在那裡。","categories":[{"name":"Learning Notes","slug":"Learning-Notes","permalink":"http://example.com/categories/Learning-Notes/"},{"name":"Code Review","slug":"Learning-Notes/Code-Review","permalink":"http://example.com/categories/Learning-Notes/Code-Review/"}],"tags":[{"name":"code review","slug":"code-review","permalink":"http://example.com/tags/code-review/"}]},{"title":"Linux指令","slug":"Learning Notes/Linux/Command","date":"2023-08-19T13:38:07.000Z","updated":"2023-10-08T16:29:14.417Z","comments":true,"path":"2023/08/19/Learning Notes/Linux/Command/","link":"","permalink":"http://example.com/2023/08/19/Learning%20Notes/Linux/Command/","excerpt":"","text":"看硬體容量 在當前目錄中查找所有子目錄的總大小find . -maxdepth 1 -type d -exec du -sh &#123;&#125; \\; 看當前資料夾的總量du -sh 查詢系統的空間使用率df -h 列出所有檔案，’h’是讓容量顯示單位ls -alh 網域查詢 查詢機器有在監聽的portnetstat -tulpn 查詢機器所有監聽，僅列出port 6379netstat -ano | find &quot;6379&quot; 解析此 domain 的 DNSdig dev-login.leju.trade 查找DNS - [nameserver] 的 [hostname] DNS 設定把 @ 拿掉，代表不去問中端的 DNS 伺服器，走平常網路的路線的話，就要等設定慢慢生效，全面套用大概四小時到一天不等dig [hostname] @[nameserver] 安裝 nc 指令sudo yum install nc 測試連線狀況nc -vz [hostname] [port[s] Nginx 查看nginx設定檔路徑nginx -t 重新加載和重啟指令nginx -s reload : reload：重新加載，reload 會重新加載配置文件，nginx 服務不會中斷。而且 reload 時會測試 conf 語法等，如果出錯會 rollback 用上一次正確配置文件保持正常運行。/etc/init.d/nginx restart : restart：重啟（先 stop 後 start），會重啟 nginx 服務。這個重啟會造成服務瞬間的中斷，如果配置文件出錯會導致服務啟動失敗，就是更長時間的服務中斷。 時區 查看時區date 查看時區設定timedatectl status 查看時區列表timedatectl list-timezones 設定為台灣時區sudo timedatectl set-timezone Asia/Taipei 壓測 ab -k -c 20 -n 20 -H “{header}” url-k 此選項啟用 HTTP KeepAlive 功能，可以在單個 TCP 連接上傳送多個 HTTP 請求，減少了為每個請求打開和關閉連接的開銷。-c 模擬同時n個訪問伺服器的使用者。-n 向伺服器發送的總請求數。-H 要塞的header。 範例: 在正式 pro機 壓測後端的新案資料庫api 後端 docker container 在 port 9003 新案資料庫api需要帶入登入token在header才會拿到資料 先用 curl 指令查看回覆是否正確 (之後壓測才準確)1curl -H &quot;Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiI5OWFjODcwNC1kMWI1LTRhMmQtYWEwZi0zYjBkZTk4Njc0OGMiLCJqdGkiOiI0NzhmN2EyM2NlOTk1M2VhNzU2MzI0ZWRlNGI1ZjM2Mjc1MDVmZjcwZjYwOTZmZDEzZTQ1NGU5YWYzMWJjMDNiMjA5MDY0OTRhZmQ5NTljNiIsImlhdCI6MTY5NDc3MDA5Mi41MzA3NzEsIm5iZiI6MTY5NDc3MDA5Mi41MzA3NzUsImV4cCI6MTY5NDg1NjQ5Mi41MDMwMjIsInN1YiI6IjIxOTA1MCIsInNjb3BlcyI6WyJ1aWQiLCJuYW1lIl19.LLP4X105cV4ldtqljTyqy5_uoq5PcOgEcCArUzwqTs2AqCh-SAPcZUj0wYKvHjry5OXulh9st4mi5_S2qF7VZ6MOf4wg6PWd9wtj6GNbGyNu4xF_h3nVYmiL7tuJvC7mGsP1Tn62LvKWkx6B52nc1nDNQC_HKHdBIk2r8XBnhS9glT1nYDbSetrXdYsyR_l4MIaWcrKv299n95i4KU1TGBDM9HQa5A9drVqi80k7U25MWvpkLg8YxtkKkZ-ZoRYtcqJsSIYipe_Sh3ILyP3lj-2E79x4afFdCCmFjrH6lzd7GvE9Gg-EsC4-pSSE9GrrPBLfDKAYXVOd0RblB8OIN0c-FPkQAXPuITb6Zpmym3yR7T3VUEYpe_vRQ0As3CacpQB2ZdA_RY6FpUAUd-rMVbJ2Qdccr3TP1u1D1M1MfjsoTWkSE8Oj14lgRfbQXd6YlnXtPNHiJtazZOyWIr8SIi6I8W0F4DrJ8yNKv936S9Oi1tURd08-AIDmq4_sJDdDjUV_iti2mTTK36-6SqY4lDFnuvpTJsF6vfvAd-AiF1n171Le1Ctcx0SBAQp6bSubGfORyl3_aAYJkkWOeqW4dMp7Hawtu1oIxzjaz0nz7QyXrMW7hBcJa4tm0p5dm6UCe8jIxHsLFrjFeQSLY7PXhqsYRowKje-oYIFRPL2iGDI&quot; &quot;http://localhost:9003/api/newbuild/objectList?city_code=H&amp;post_code=337&amp;small_area_id=11116&amp;building_types=0&amp;sales_status=2&amp;page=1&amp;per_page=10&quot; 1ab -k -c 20 -n 20 -H &quot;Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiI5OWFjODcwNC1kMWI1LTRhMmQtYWEwZi0zYjBkZTk4Njc0OGMiLCJqdGkiOiI0NzhmN2EyM2NlOTk1M2VhNzU2MzI0ZWRlNGI1ZjM2Mjc1MDVmZjcwZjYwOTZmZDEzZTQ1NGU5YWYzMWJjMDNiMjA5MDY0OTRhZmQ5NTljNiIsImlhdCI6MTY5NDc3MDA5Mi41MzA3NzEsIm5iZiI6MTY5NDc3MDA5Mi41MzA3NzUsImV4cCI6MTY5NDg1NjQ5Mi41MDMwMjIsInN1YiI6IjIxOTA1MCIsInNjb3BlcyI6WyJ1aWQiLCJuYW1lIl19.LLP4X105cV4ldtqljTyqy5_uoq5PcOgEcCArUzwqTs2AqCh-SAPcZUj0wYKvHjry5OXulh9st4mi5_S2qF7VZ6MOf4wg6PWd9wtj6GNbGyNu4xF_h3nVYmiL7tuJvC7mGsP1Tn62LvKWkx6B52nc1nDNQC_HKHdBIk2r8XBnhS9glT1nYDbSetrXdYsyR_l4MIaWcrKv299n95i4KU1TGBDM9HQa5A9drVqi80k7U25MWvpkLg8YxtkKkZ-ZoRYtcqJsSIYipe_Sh3ILyP3lj-2E79x4afFdCCmFjrH6lzd7GvE9Gg-EsC4-pSSE9GrrPBLfDKAYXVOd0RblB8OIN0c-FPkQAXPuITb6Zpmym3yR7T3VUEYpe_vRQ0As3CacpQB2ZdA_RY6FpUAUd-rMVbJ2Qdccr3TP1u1D1M1MfjsoTWkSE8Oj14lgRfbQXd6YlnXtPNHiJtazZOyWIr8SIi6I8W0F4DrJ8yNKv936S9Oi1tURd08-AIDmq4_sJDdDjUV_iti2mTTK36-6SqY4lDFnuvpTJsF6vfvAd-AiF1n171Le1Ctcx0SBAQp6bSubGfORyl3_aAYJkkWOeqW4dMp7Hawtu1oIxzjaz0nz7QyXrMW7hBcJa4tm0p5dm6UCe8jIxHsLFrjFeQSLY7PXhqsYRowKje-oYIFRPL2iGDI&quot; &quot;http://localhost:9003/api/newbuild/objectList?city_code=H&amp;post_code=337&amp;small_area_id=11116&amp;building_types=0&amp;sales_status=2&amp;page=1&amp;per_page=10&quot;","categories":[{"name":"Learning Notes","slug":"Learning-Notes","permalink":"http://example.com/categories/Learning-Notes/"},{"name":"Linux","slug":"Learning-Notes/Linux","permalink":"http://example.com/categories/Learning-Notes/Linux/"},{"name":"Command","slug":"Learning-Notes/Linux/Command","permalink":"http://example.com/categories/Learning-Notes/Linux/Command/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://example.com/tags/linux/"},{"name":"command","slug":"command","permalink":"http://example.com/tags/command/"}]},{"title":"高級sql","slug":"Learning Notes/SQL/1","date":"2023-08-19T13:38:07.000Z","updated":"2023-08-19T16:59:57.784Z","comments":true,"path":"2023/08/19/Learning Notes/SQL/1/","link":"","permalink":"http://example.com/2023/08/19/Learning%20Notes/SQL/1/","excerpt":"","text":"七大類型文章分別取前五篇筆記的sql1234567891011121314select * from ( SELECT *, @row_number:=CASE WHEN @blog_type_no = blog_type THEN @row_number + 1 ELSE 1 END AS num, @blog_type_no:=blog_type as BlogType FROM leju_blog, (SELECT @blog_type_no:=0,@row_number:=0) as t WHERE blog_type in (0,1,2,3,4,5,6) ORDER BY blog_type desc, release_date desc) as rankingWHERE ranking.num&lt;=5 嚴謹的更新資料庫資料找出信義房屋的維護人，設定他們的expert_agency、business、license_verified_state 檢查查詢內容，看是否有企業訂單內的 maintain_uid 不存在於 leju_member 內。正常來說不應該出現。123456789101112# 正式站因為欄位語系問題，使用變數需要指定語系# 信義房屋企業訂單#SET @order_number = &#x27;B2023&#x27;;SET @order_number = &#x27;B2023&#x27; COLLATE utf8mb4_general_ci;SELECT DISTINCT(`leju_expert_order_bodys`.`maintain_uid`), `leju_member`.`id`, `leju_member`.`expert_agency`, `leju_member`.`license_verified_state`, `leju_member`.`business`FROM `leju_expert_order_bodys` LEFT JOIN `leju_member`ON `leju_expert_order_bodys`.`maintain_uid` = `leju_member`.`id`WHERE `leju_expert_order_bodys`.`order_number` = @order_numberAND `leju_expert_order_bodys`.`deleted_at` IS NULLAND `leju_expert_order_bodys`.`expire_date` &gt; NOW()AND `leju_member`.`id` IS NULLORDER BY `leju_member`.`id` ASC; 檢查要更新的內容123456789101112# 正式站因為欄位語系問題，使用變數需要指定語系# 信義房屋企業訂單#SET @order_number = &#x27;B2023&#x27;;SET @order_number = &#x27;B2023&#x27; COLLATE utf8mb4_general_ci;SELECT DISTINCT(`leju_expert_order_bodys`.`maintain_uid`), `leju_member`.`id`, `leju_member`.`expert_agency`, `leju_member`.`license_verified_state`, `leju_member`.`business`FROM `leju_expert_order_bodys` LEFT JOIN `leju_member`ON `leju_expert_order_bodys`.`maintain_uid` = `leju_member`.`id`WHERE `leju_expert_order_bodys`.`order_number` = @order_numberAND `leju_expert_order_bodys`.`deleted_at` IS NULLAND `leju_expert_order_bodys`.`expire_date` &gt; NOW()AND `leju_member`.`id` IS NOT NULLORDER BY `leju_member`.`id` ASC; 確認沒問題後，執行要更新的內容1234567891011121314151617181920# 正式站因為欄位語系問題，使用變數需要指定語系# 信義房屋企業訂單#SET @order_number = &#x27;B2023&#x27;;SET @order_number = &#x27;B2023&#x27; COLLATE utf8mb4_general_ci;# 信義房屋公司名稱#SET @expert_agency = &#x27;信義房屋&#x27;;SET @expert_agency = &#x27;信義房屋&#x27; COLLATE utf8mb4_general_ci;# 證照狀態統一修改為有證照#SET @license_verified_state = 1;SET @license_verified_state = 1 COLLATE utf8mb4_general_ci;# 信義房屋公司完整名稱#SET @business = &#x27;信義房屋股份有限公司&#x27;;SET @business = &#x27;信義房屋股份有限公司&#x27; COLLATE utf8mb4_general_ci;UPDATE `leju_expert_order_bodys` LEFT JOIN `leju_member`ON `leju_expert_order_bodys`.`maintain_uid` = `leju_member`.`id`SET `leju_member`.`expert_agency` = @expert_agency, `leju_member`.`license_verified_state` = @license_verified_state, `leju_member`.`business` = @businessWHERE `leju_expert_order_bodys`.`order_number` = @order_numberAND `leju_expert_order_bodys`.`deleted_at` IS NULLAND `leju_expert_order_bodys`.`expire_date` &gt; NOW()AND `leju_member`.`id` IS NOT NULL; 刪資料前先備份 先建一樣結構的新表CREATE TABLE [目的表] LIKE [來源表];1CREATE TABLE leju_expert_order_bodys_tmp_20230808 LIKE leju_expert_order_bodys; 把舊表資料同步到新表INSERT INTO [目的表] SELECT * FROM [來源表];1INSERT INTO leju_expert_order_bodys_tmp_20230808 SELECT * FROM leju_expert_order_bodys;","categories":[{"name":"Learning Notes","slug":"Learning-Notes","permalink":"http://example.com/categories/Learning-Notes/"},{"name":"SQL","slug":"Learning-Notes/SQL","permalink":"http://example.com/categories/Learning-Notes/SQL/"}],"tags":[{"name":"sql","slug":"sql","permalink":"http://example.com/tags/sql/"}]},{"title":"Mysql 備份&還原指令","slug":"Learning Notes/SQL/2","date":"2023-08-19T13:38:07.000Z","updated":"2023-10-08T16:42:00.749Z","comments":true,"path":"2023/08/19/Learning Notes/SQL/2/","link":"","permalink":"http://example.com/2023/08/19/Learning%20Notes/SQL/2/","excerpt":"","text":"前置作業 確認機器有裝 mysql cli，並有權限連進目標DB host 語法 [備份] 使用mysqldump 備份單一資料庫mysqldump -h hostname -u root -p database_name &gt; backup.sql; 備份資料庫中單一資料表mysqldump -u root -p database_name table_name &gt; backup.sql; 備份資料庫中多張資料表mysqldump -u root -p database_name table1 table2 &gt; backup.sql; 備份多個資料庫mysqldump -u root -p --databases db1 db2 &gt; backup.sql; 備份所有資料庫mysqldump -u root -p --all-databases &gt; backup.sql; [復原] 使用mysql 復原單一資料庫mysql -u root -p database_name &lt; backup.sql 復原多個資料庫mysql -u root -p &lt; backup.sql 實際例子 在 release backend 下指令，把 release backend tmp_object_expert_price table dump 到 正式 backend tmp_object_expert_price table 在 release backend 機下指令，把 release backend tmp_object_expert_price table dump 到 ~&#x2F;tmp&#x2F;tmp_object_expert_price.sql 檔案。1mysqldump -h leju-release-db-cluster.cluster-cxvfthflkhqi.ap-northeast-1.rds.amazonaws.com -u awsleju -p backend tmp_object_expert_price &gt; ~/tmp/tmp_object_expert_price.sql 把 release backend 機上的 tmp_object_expert_price.sql 檔案傳到正式 backend 機一樣的位置。(如果release backend 機有連入正式DB的權限，就可以不用這個步驟) 在正式 backend 機下指令，把 ~&#x2F;tmp&#x2F;tmp_object_expert_price.sql 檔案匯入到正式backend tmp_object_expert_price table。 1mysql -h aurora-cluster.cluster-cxvfthflkhqi.ap-northeast-1.rds.amazonaws.com -u awsleju -p backend tmp_object_expert_price &lt; ~/tmp/tmp_object_expert_price.sql Reference Mysqldump 備份&amp;還原資料庫 – 指令範例","categories":[{"name":"Learning Notes","slug":"Learning-Notes","permalink":"http://example.com/categories/Learning-Notes/"},{"name":"SQL","slug":"Learning-Notes/SQL","permalink":"http://example.com/categories/Learning-Notes/SQL/"}],"tags":[{"name":"sql","slug":"sql","permalink":"http://example.com/tags/sql/"},{"name":"mysql","slug":"mysql","permalink":"http://example.com/tags/mysql/"}]},{"title":"Hexo Readme","slug":"Learning Notes/Hexo/Basic","date":"2023-08-06T13:38:07.000Z","updated":"2023-08-06T13:38:07.000Z","comments":true,"path":"2023/08/06/Learning Notes/Hexo/Basic/","link":"","permalink":"http://example.com/2023/08/06/Learning%20Notes/Hexo/Basic/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartFile Location1$ cd C:\\Users\\alice\\nginx_hexo_alice_blog\\nginx-1.25.1\\hexo\\blog Create a new post1$ hexo new &quot;My New Post&quot; More info: Writing、hexo關鍵字 Front-Matter、使用Markdown語法 Run server1$ hexo server More info: Server 清除之前建立的靜態檔案1$ hexo cl Generate static files12$ hexo g$ hexo generate More info: Generating Deploy to remote sites12$ hexo d$ hexo deploy More info: Deployment","categories":[{"name":"Learning Notes","slug":"Learning-Notes","permalink":"http://example.com/categories/Learning-Notes/"},{"name":"Hexo","slug":"Learning-Notes/Hexo","permalink":"http://example.com/categories/Learning-Notes/Hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"}]}],"categories":[{"name":"Learning Notes","slug":"Learning-Notes","permalink":"http://example.com/categories/Learning-Notes/"},{"name":"Redis","slug":"Learning-Notes/Redis","permalink":"http://example.com/categories/Learning-Notes/Redis/"},{"name":"Command","slug":"Learning-Notes/Redis/Command","permalink":"http://example.com/categories/Learning-Notes/Redis/Command/"},{"name":"Hexo","slug":"Learning-Notes/Hexo","permalink":"http://example.com/categories/Learning-Notes/Hexo/"},{"name":"Code Review","slug":"Learning-Notes/Code-Review","permalink":"http://example.com/categories/Learning-Notes/Code-Review/"},{"name":"Linux","slug":"Learning-Notes/Linux","permalink":"http://example.com/categories/Learning-Notes/Linux/"},{"name":"Command","slug":"Learning-Notes/Linux/Command","permalink":"http://example.com/categories/Learning-Notes/Linux/Command/"},{"name":"SQL","slug":"Learning-Notes/SQL","permalink":"http://example.com/categories/Learning-Notes/SQL/"}],"tags":[{"name":"command","slug":"command","permalink":"http://example.com/tags/command/"},{"name":"redis","slug":"redis","permalink":"http://example.com/tags/redis/"},{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://example.com/tags/github/"},{"name":"code review","slug":"code-review","permalink":"http://example.com/tags/code-review/"},{"name":"linux","slug":"linux","permalink":"http://example.com/tags/linux/"},{"name":"sql","slug":"sql","permalink":"http://example.com/tags/sql/"},{"name":"mysql","slug":"mysql","permalink":"http://example.com/tags/mysql/"}]}